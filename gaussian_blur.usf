#pragma once
//grayscale->blur->canny
struct GaussianBlurHelpers {

  //1D Guassian Function (Determines the Weight of the Neighboring Pixel in Convolution)
  float calculate1DGuassian(float x) {
    return exp(-0.5 * pow(3.141 * (x), 2));
  }

  float3 gaussian_blur(float2 uv, float2 TexelSize, int sceneTextureId) {
    int radius = 2; //kernel size for convoultion = (2r+1)x(2r+1)
    float3 pixel = float3(0.0,0.0,0.0);
    float weightSum = 0.0;
    for (int y = -radius; y <= radius; y++) {
      for (int x = -radius; x <= radius; x++) {
        float2 offset = uv + (float2(x,y) * TexelSize);
        float weight = calculate1DGuassian(float(x)/float(radius)) * calculate1DGuassian(float(y)/float(radius));
        pixel += SceneTextureLookup(offset, sceneTextureId, false).rgb * weight;
        weightSum += weight;
      }
    }
    return pixel/weightSum;
  }
}; GaussianBlurHelpers g_b;
int sceneTextureId = 14
float2 TexelSize = View.ViewSizeAndInvSize.zw;
float2 uv = GetDefaultSceneTextureUV(Parameters,sceneTextureId);
return g_b.gaussian_blur(uv, TexelSize, sceneTextureId);
