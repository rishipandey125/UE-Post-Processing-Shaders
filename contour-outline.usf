#pragma once
//Helper Function for Expand Operation
struct HelperFunctions {
  float3 expand(float3 vec) {
    float x = (2 * vec.r) - 1;
    float y = (2 * vec.g) - 1;
    float z = (2 * vec.b) - 1;
    return float3(x,y,z);
  }
};
HelperFunctions f;
//UV Texture GET
float2 uv = GetDefaultSceneTextureUV(Parameters, 14);
//Stencil Index for Character
float stencilIndex = 1;
float3 color = float3(1,1,1);
if (SceneTextureLookup(uv,25,false).r == stencilIndex) {
  //Screen Size
  float2 TexelSize = View.ViewSizeAndInvSize.zw;
  //top left UV coordinate A
  float2 A = (float2(-1,1)*TexelSize) + uv;
  //top right UV coordinate C
  float2 C = (float2(1,1)*TexelSize) + uv;
  //bottom left uv coordinate F
  float2 F = (float2(-1,-1)*TexelSize) + uv;
  //bottom right uv coordinate H
  float2 H = (float2(1,-1)*TexelSize) + uv;

  float3 Anorm = SceneTextureLookup(A,8,false).rgb;
  float3 Cnorm = SceneTextureLookup(C,8,false).rgb;
  float3 Fnorm = SceneTextureLookup(F,8,false).rgb;
  float3 Hnorm = SceneTextureLookup(H,8,false).rgb;
  float3 In = (dot(f.expand(Anorm),f.expand(Hnorm)) * 0.5) + (dot(f.expand(Cnorm),f.expand(Fnorm)));

  float Az = SceneTextureLookup(A,1,false).r;
  float Cz = SceneTextureLookup(C,1,false).r;
  float Fz = SceneTextureLookup(F,1,false).r;
  float Hz = SceneTextureLookup(H,1,false).r;
  float Iz = pow((1 - (0.5 * abs(Az-Hz))),2.0) * pow((1 - (0.5 * abs(Cz-Fz))),2.0);
  color = float3(In.r,In.g,In.b);
  if (color.rgb == float3(0,0,0)) {
     color = float3(1,0,0);
  }
}
return color;
